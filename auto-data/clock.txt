################################################################################
##
## Filename: 	clock.txt
##
## Project:	ZipVersa, Versa Brd implementation using ZipCPU infrastructure
##
## Purpose:	Defines the frequency of the incoming clock.  Useful if the
##		the design is being run without any PLLs.
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2019, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=clock
@CLOCK.NAME=clk
@CLOCK.TOP=i_clk
@$CLOCK.FREQUENCY=50000000
@CLOCK.WIRE=i_clk
@TOP.DEFNS=
	wire	s_clk, s_reset;
@TOP.INSERT=
	assign	s_reset = 1'b0;

	// Divide our incoming clock by two to get down to 50MHz
	CLKDIVF clock_divider(.CLKI(i_clk),
		.RST(0), .ALIGNWD(1'b0), .CDIVX(s_clk));
@REGDEFS.H.DEFNS=
#define	CLKFREQHZ	@$(CLOCK.FREQUENCY)
@BDEF.DEFN=
#define	CLKFREQHZ	@$(CLOCK.FREQUENCY)
